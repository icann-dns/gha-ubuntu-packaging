name: Ubuntu packaging
description: Build binary .deb package

branding:
  color: orange
  icon: package

inputs:
  flavor:
    description: 'The name of the distribution, i.e. Ubuntu or Debian. Defaults to `ubuntu`.'
    required: false
    default: 'ubuntu'
  dist:
   description: 'The name of a Ubuntu version, either code name (e.g. jammy) or release (e.g. 22.04)'
   required: true
  platform:
    description: 'The platform to build on. One of `amd64` or `i386`. Defaults to `amd64`.'
    required: false
    default: 'amd64'
  build_script:
    description: 'an alternate build script to use.  Use `paths relative to your source` as the root of your repo'
    required: false
    default: '../local-build.sh'
  result_dir:
    description: 'The path should be relative to your workspace'
    required: false
    default: 'artifacts'
  deb_fullname:
    description: 'Full name used for changelog entry'
    required: false
    default: 'icann-dns GHA Packager'
  deb_email:
    description: 'Email address used for changelog entry'
    required: false
    default: 'noc@dns.icann.org'
  prerelease_tag:
    description: 'A pre-release tag to add to the version number'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Verify input
      shell: bash
      run: |
        if [ "${{inputs.flavor}}" == "ubuntu" ] && [ "${{inputs.platform}}" == "i386" ]; then
          echo "::error::Platform i386 is not supported for Ubuntu"
          exit 1
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

    - name: Build Docker image
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
      with:
        context: ${{github.action_path}}
        tags: ${{github.actor}}/icann-dns-${{inputs.flavor}}-${{inputs.dist}}-${{inputs.platform}}
        cache-from: type=gha
        cache-to: type=gha
        outputs: type=docker
        push: false
        platforms: ${{inputs.platform}}
        build-args: |
          DIST=${{inputs.dist}}
          DISTRIBUTION=${{inputs.flavor}}
          PLATFORM=${{inputs.platform}}

    - name: Build package
      shell: bash
      run: |
        docker run --entrypoint="/build/source/${{inputs.build_script}}" \
          --platform="${{inputs.platform}}" \
          -v "/var/run/docker.sock":"/var/run/docker.sock" \
          -v "${{github.workspace}}":/build/source \
          -e DEBEMAIL -e DEB_FULLNAME -e GITHUB_REF_NAME -e RESULT_DIR \
          --workdir /build/source "${IMAGE_NAME}"
      working-directory: ${{github.workspace}}
      env:
        DEB_FULLNAME: "${{inputs.deb_fullname}}"
        DEBEMAIL: "${{inputs.deb_email}}"
        RESULT_DIR: "${{inputs.result_dir}}"
        IMAGE_NAME: "${{github.actor}}/icann-dns-${{inputs.flavor}}-${{inputs.dist}}-${{inputs.platform}}"
